IQ-TREE multicore version 1.6.7 for Linux 64-bit built Aug 23 2018
Developed by Bui Quang Minh, Nguyen Lam Tung, Olga Chernomor,
Heiko Schmidt, Dominik Schrempf, Michael Woodhams.

Host:    csm-com-008 (AVX2, FMA3, 62 GB RAM)
Command: iqtree -nt 8 -m TESTONLY -s /csm_data/spielman_lab/dms_modelselection//simulations/alignments/Gal4_btree64_bl3.0.tree_rep5_AA.fasta -st AA
Seed:    602516 (Using SPRNG - Scalable Parallel Random Number Generator)
Time:    Mon Apr  1 09:05:45 2019
Kernel:  AVX+FMA - 8 threads (48 CPU cores detected)

Reading alignment file /csm_data/spielman_lab/dms_modelselection//simulations/alignments/Gal4_btree64_bl3.0.tree_rep5_AA.fasta ... Fasta format detected
Alignment most likely contains protein sequences
Alignment has 64 sequences with 64 columns, 64 distinct patterns
63 parsimony-informative, 1 singleton sites, 0 constant sites
     Gap/Ambiguity  Composition  p-value
   1  t54    0.00%    passed     97.54%
   2  t25    0.00%    passed     45.47%
   3  t8     0.00%    passed     80.61%
   4  t37    0.00%    passed     92.15%
   5  t52    0.00%    passed     92.81%
   6  t22    0.00%    passed     71.29%
   7  t13    0.00%    passed     33.31%
   8  t59    0.00%    passed     22.86%
   9  t20    0.00%    passed     89.07%
  10  t27    0.00%    passed     60.80%
  11  t2     0.00%    passed     39.27%
  12  t63    0.00%    passed     84.88%
  13  t24    0.00%    passed     67.84%
  14  t10    0.00%    failed      3.22%
  15  t1     0.00%    passed     90.18%
  16  t28    0.00%    passed     73.16%
  17  t38    0.00%    passed     96.67%
  18  t11    0.00%    passed     93.17%
  19  t23    0.00%    passed     44.91%
  20  t60    0.00%    passed     89.68%
  21  t36    0.00%    passed     54.51%
  22  t41    0.00%    passed     77.80%
  23  t18    0.00%    passed     92.43%
  24  t50    0.00%    passed     83.99%
  25  t44    0.00%    passed     33.31%
  26  t15    0.00%    passed     82.49%
  27  t62    0.00%    passed     62.32%
  28  t46    0.00%    passed     68.36%
  29  t43    0.00%    passed     33.06%
  30  t30    0.00%    passed     91.34%
  31  t55    0.00%    passed     32.58%
  32  t7     0.00%    passed     94.78%
  33  t40    0.00%    passed     57.13%
  34  t49    0.00%    passed     73.59%
  35  t51    0.00%    passed     59.82%
  36  t17    0.00%    passed     70.41%
  37  t39    0.00%    failed      1.50%
  38  t57    0.00%    passed     87.53%
  39  t61    0.00%    passed     99.94%
  40  t19    0.00%    passed     97.01%
  41  t47    0.00%    passed     14.38%
  42  t45    0.00%    passed     47.17%
  43  t56    0.00%    passed     92.19%
  44  t64    0.00%    passed     63.79%
  45  t12    0.00%    passed     97.94%
  46  t53    0.00%    passed     80.03%
  47  t6     0.00%    passed     83.47%
  48  t3     0.00%    passed     57.75%
  49  t29    0.00%    passed     94.93%
  50  t4     0.00%    passed     91.07%
  51  t16    0.00%    passed     38.20%
  52  t32    0.00%    passed     95.87%
  53  t26    0.00%    passed     55.35%
  54  t58    0.00%    passed     98.88%
  55  t35    0.00%    passed     82.36%
  56  t31    0.00%    passed     91.23%
  57  t5     0.00%    passed     27.16%
  58  t9     0.00%    passed     49.47%
  59  t14    0.00%    passed     85.89%
  60  t48    0.00%    passed     60.69%
  61  t33    0.00%    passed     57.93%
  62  t21    0.00%    passed     95.82%
  63  t42    0.00%    passed     55.55%
  64  t34    0.00%    passed     42.23%
****  TOTAL    0.00%  2 sequences failed composition chi2 test (p-value<5%; df=19)


Create initial parsimony tree by phylogenetic likelihood library (PLL)... 0.007 seconds
NOTE: ModelFinder requires 3 MB RAM!
ModelFinder will test 84 protein models (sample size: 64) ...
 No. Model         -LnL         df  AIC          AICc         BIC
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
  1  Dayhoff       9155.878     125 18561.756    50061.756    18831.617
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
  2  Dayhoff+G4    8702.796     126 17657.591    49661.591    17929.610
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
  3  Dayhoff+F     9035.668     144 18359.335    60119.335    18670.215
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
  4  Dayhoff+F+G4  8595.482     145 17480.965    59820.965    17794.003
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
  5  mtMAM         9902.019     125 20054.039    51554.039    20323.899
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
  6  mtMAM+G4      9114.604     126 18481.208    50485.208    18753.227
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
  7  mtMAM+F       9431.353     144 19150.705    60910.705    19461.584
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
  8  mtMAM+F+G4    8829.199     145 17948.398    60288.398    18261.436
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
  9  JTT           8938.344     125 18126.688    49626.688    18396.548
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 10  JTT+G4        8519.096     126 17290.191    49294.191    17562.211
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 11  JTT+F         8927.610     144 18143.220    59903.220    18454.099
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 12  JTT+F+G4      8502.985     145 17295.969    59635.969    17609.007
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 13  WAG           8926.060     125 18102.121    49602.121    18371.981
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 14  WAG+G4        8537.227     126 17326.455    49330.455    17598.474
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 15  WAG+F         8877.632     144 18043.264    59803.264    18354.143
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 16  WAG+F+G4      8490.260     145 17270.519    59610.519    17583.557
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 17  cpREV         9050.747     125 18351.494    49851.494    18621.355
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 18  cpREV+G4      8606.653     126 17465.307    49469.307    17737.326
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 19  cpREV+F       9065.142     144 18418.285    60178.285    18729.164
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 20  cpREV+F+G4    8589.392     145 17468.784    59808.784    17781.822
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 21  mtREV         9529.579     125 19309.158    50809.158    19579.018
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 22  mtREV+G4      8919.655     126 18091.310    50095.310    18363.329
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 23  mtREV+F       9141.737     144 18571.474    60331.474    18882.353
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 24  mtREV+F+G4    8646.151     145 17582.302    59922.302    17895.340
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 25  rtREV         9078.086     125 18406.171    49906.171    18676.032
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 26  rtREV+G4      8674.149     126 17600.298    49604.298    17872.317
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 27  rtREV+F       9018.061     144 18324.122    60084.122    18635.001
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 28  rtREV+F+G4    8596.379     145 17482.759    59822.759    17795.797
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 29  mtART         9935.732     125 20121.464    51621.464    20391.325
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 30  mtART+G4      9123.749     126 18499.498    50503.498    18771.517
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 31  mtART+F       9523.320     144 19334.641    61094.641    19645.520
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 32  mtART+F+G4    8834.304     145 17958.608    60298.608    18271.646
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 33  mtZOA         9588.159     125 19426.317    50926.317    19696.178
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 34  mtZOA+G4      8873.119     126 17998.239    50002.239    18270.258
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 35  mtZOA+F       9336.529     144 18961.059    60721.059    19271.938
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 36  mtZOA+F+G4    8710.908     145 17711.817    60051.817    18024.855
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 37  VT            8830.649     125 17911.298    49411.298    18181.158
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 38  VT+G4         8486.234     126 17224.468    49228.468    17496.487
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 39  VT+F          8803.577     144 17895.153    59655.153    18206.032
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 40  VT+F+G4       8454.086     145 17198.171    59538.171    17511.209
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 41  LG            9013.622     125 18277.245    49777.245    18547.105
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 42  LG+G4         8593.420     126 17438.840    49442.840    17710.859
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 43  LG+F          8984.864     144 18257.728    60017.728    18568.607
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 44  LG+F+G4       8544.261     145 17378.522    59718.522    17691.560
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 45  DCMut         9153.822     125 18557.644    50057.644    18827.504
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 46  DCMut+G4      8702.621     126 17657.242    49661.242    17929.261
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 47  DCMut+F       9033.906     144 18355.811    60115.811    18666.690
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 48  DCMut+F+G4    8595.335     145 17480.670    59820.670    17793.708
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 49  PMB           8779.833     125 17809.666    49309.666    18079.527
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 50  PMB+G4        8447.892     126 17147.783    49151.783    17419.802
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 51  PMB+F         8789.055     144 17866.111    59626.111    18176.990
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 52  PMB+F+G4      8457.799     145 17205.599    59545.599    17518.637
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 53  HIVb          9203.518     125 18657.035    50157.035    18926.896
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 54  HIVb+G4       8665.971     126 17583.942    49587.942    17855.962
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 55  HIVb+F        9207.019     144 18702.038    60462.038    19012.918
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 56  HIVb+F+G4     8656.513     145 17603.025    59943.025    17916.063
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 57  HIVw          9657.642     125 19565.285    51065.285    19835.145
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 58  HIVw+G4       9054.358     126 18360.717    50364.717    18632.736
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 59  HIVw+F        9369.249     144 19026.499    60786.499    19337.378
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 60  HIVw+F+G4     8803.365     145 17896.729    60236.729    18209.767
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 61  JTTDCMut      8941.079     125 18132.158    49632.158    18402.019
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 62  JTTDCMut+G4   8522.347     126 17296.694    49300.694    17568.713
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 63  JTTDCMut+F    8925.589     144 18139.177    59899.177    18450.057
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 64  JTTDCMut+F+G4 8502.588     145 17295.177    59635.177    17608.215
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 65  FLU           9344.226     125 18938.451    50438.451    19208.312
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 66  FLU+G4        8792.025     126 17836.051    49840.051    18108.070
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 67  FLU+F         9156.952     144 18601.904    60361.904    18912.783
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 68  FLU+F+G4      8629.310     145 17548.620    59888.620    17861.658
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 69  Blosum62      8843.566     125 17937.132    49437.132    18206.992
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 70  Blosum62+G4   8504.120     126 17260.239    49264.239    17532.259
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 71  Blosum62+F    8838.270     144 17964.539    59724.539    18275.418
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 72  Blosum62+F+G4 8489.119     145 17268.238    59608.238    17581.277
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 73  mtMet         9495.450     125 19240.900    50740.900    19510.760
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 74  mtMet+G4      8911.710     126 18075.420    50079.420    18347.439
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 75  mtMet+F       9140.737     144 18569.474    60329.474    18880.353
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 76  mtMet+F+G4    8631.056     145 17552.111    59892.111    17865.150
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 77  mtVer         9632.765     125 19515.529    51015.529    19785.390
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 78  mtVer+G4      8986.892     126 18225.785    50229.785    18497.804
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 79  mtVer+F       9227.151     144 18742.301    60502.301    19053.180
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 80  mtVer+F+G4    8709.421     145 17708.842    60048.842    18021.880
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 81  mtInv         9463.251     125 19176.502    50676.502    19446.362
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 82  mtInv+G4      8938.093     126 18128.185    50132.185    18400.205
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 83  mtInv+F       9082.174     144 18452.349    60212.349    18763.228
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
 84  mtInv+F+G4    8588.896     145 17467.791    59807.791    17780.829
Akaike Information Criterion:           PMB+G4
Corrected Akaike Information Criterion: PMB+G4
Bayesian Information Criterion:         PMB+G4
Best-fit model: PMB+G4 chosen according to BIC

All model information printed to /csm_data/spielman_lab/dms_modelselection//simulations/alignments/Gal4_btree64_bl3.0.tree_rep5_AA.fasta.model.gz
CPU time for ModelFinder: 37.648 seconds (0h:0m:37s)
Wall-clock time for ModelFinder: 4.739 seconds (0h:0m:4s)

NOTE: 3 MB RAM (0 GB) is required!
WARNING: Number of threads seems too high for short alignments. Use -nt AUTO to determine best number of threads.
Estimate model parameters (epsilon = 0.010)
1. Initial log-likelihood: -8448.112
2. Current log-likelihood: -8447.897
Optimal log-likelihood: -8447.885
Gamma shape alpha: 1.052
Parameters optimization took 2 rounds (0.038 sec)
BEST SCORE FOUND : -8447.885
Total tree length: 56.130

Total number of iterations: 0
CPU time used for tree search: 0.000 sec (0h:0m:0s)
Wall-clock time used for tree search: 0.000 sec (0h:0m:0s)
Total CPU time used: 0.381 sec (0h:0m:0s)
Total wall-clock time used: 0.048 sec (0h:0m:0s)

Analysis results written to: 
  IQ-TREE report:                /csm_data/spielman_lab/dms_modelselection//simulations/alignments/Gal4_btree64_bl3.0.tree_rep5_AA.fasta.iqtree
  Tree used for ModelFinder:     /csm_data/spielman_lab/dms_modelselection//simulations/alignments/Gal4_btree64_bl3.0.tree_rep5_AA.fasta.treefile
  Screen log file:               /csm_data/spielman_lab/dms_modelselection//simulations/alignments/Gal4_btree64_bl3.0.tree_rep5_AA.fasta.log

Date and Time: Mon Apr  1 09:05:50 2019
